{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BlueRPC Documentation","text":""},{"location":"reference/proto/rpc/","title":"Protocol Documentation","text":""},{"location":"reference/proto/rpc/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>rpc/common.proto</p> <ul> <li>HelloRequest</li> <li>HelloResponse</li> <li>StatusMessage</li> <li> <p>Void</p> </li> <li> <p>ErrorCode</p> </li> <li>WorkerMode</li> <li>WorkerType</li> </ul> </li> <li> <p>rpc/services.proto</p> <ul> <li>BlueRPC</li> </ul> </li> <li> <p>rpc/gatt.proto</p> <ul> <li>BLEAdvertisementData</li> <li>BLECharacteristic</li> <li>BLEConnectRequest</li> <li>BLEConnectResponse</li> <li>BLEConnectionPropertiesResponse</li> <li>BLEDescriptor</li> <li>BLEDevice</li> <li>BLEDevicesResponse</li> <li>BLEListServicesResponse</li> <li>BLENotificationRequest</li> <li>BLENotificationResponse</li> <li>BLEPairingCodeRequest</li> <li>BLEPairingRequest</li> <li>BLEReadCharacteristicRequest</li> <li>BLEReadDescriptorRequest</li> <li>BLEReadResponse</li> <li>BLEScanFilter</li> <li>BLEScanRequest</li> <li>BLEScanResponse</li> <li>BLEService</li> <li>BLEWriteCharacteristicRequest</li> <li> <p>BLEWriteDescriptorRequest</p> </li> <li> <p>BLEChrProperty</p> </li> <li>BLEScanFilterType</li> <li>BLEWriteMode</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"reference/proto/rpc/#rpccommonproto","title":"rpc/common.proto","text":""},{"location":"reference/proto/rpc/#hellorequest","title":"HelloRequest","text":"<p>infos about the client connecting to the worker</p> Field Type Label Description name string client name version string client protocol version <p></p>"},{"location":"reference/proto/rpc/#helloresponse","title":"HelloResponse","text":"<p>returns general info on the worker</p> Field Type Label Description name string worker name version string protocol version uptime uint64 uptime of the worker supported_modes WorkerMode repeated supported modes worker_type WorkerType worker operating_system string OS operating_system_version string OS Version <p></p>"},{"location":"reference/proto/rpc/#statusmessage","title":"StatusMessage","text":"<p>status message</p> Field Type Label Description code ErrorCode error status message string error description <p></p>"},{"location":"reference/proto/rpc/#void","title":"Void","text":"<p>empty message</p> <p></p>"},{"location":"reference/proto/rpc/#errorcode","title":"ErrorCode","text":"<p>possible error codes</p> Name Number Description ERROR_CODE_UNK 0 not specified ERROR_CODE_OK 1 OK ERROR_CODE_ERROR 2 an unknown error occured ERROR_CODE_UNAVAILABLE 3 device not available / cannot be found ERROR_CODE_CONNECTION_FAILED 4 failed to connect to the device ERROR_CODE_UNKNOWN_SERVICE 5 the specified sevice is unknown ERROR_CODE_UNKNOWN_CHARACTERISTIC 6 the specified characteristic is unknown ERROR_CODE_UNKNOWN_DESCRIPTOR 7 the specified descriptor is unknown ERROR_CODE_UNSUPPORTED 8 the requested action is not supported ERROR_CODE_INVALID_CONNECTION_SETTINGS 9 supplied connection settings are invalid ERROR_CODE_ALREADY_CONNECTED 10 device is already connected ERROR_CODE_DEVICE_BUSY 11 another app is already using this device ERROR_CODE_CONNECTION_REQUIRED 12 connection is required (ex: for pairing) ERROR_CODE_PAIRING_CODE_REQUIRED 13 pairing code is required ERROR_CODE_SCAN_FILTERS_REQUIRED 14 if scan filters are mandatory (12.0 &gt;= macOS &lt; 12.3, android &gt; 8) ERROR_CODE_SCAN_ALREADY_RUNNING 15 scan already running ERROR_CODE_SCAN_STOPPED 16 scan stopped <p></p>"},{"location":"reference/proto/rpc/#workermode","title":"WorkerMode","text":"<p>possible worker modes</p> Name Number Description WORKER_MODE_UNK 0 unknown worker mode WORKER_MODE_GATT_PASSIVE 1 can receive gatt advertisement packets WORKER_MODE_GATT_ACTIVE 2 can connect to a device <p></p>"},{"location":"reference/proto/rpc/#workertype","title":"WorkerType","text":"<p>types of workers supported by bluerpc</p> Name Number Description WORKER_TYPE_UNKNOWN 0 unknown worker type WORKER_TYPE_PYTHON 1 python service worker WORKER_TYPE_ANDROID 2 android worker <p></p> <p>Top</p>"},{"location":"reference/proto/rpc/#rpcservicesproto","title":"rpc/services.proto","text":""},{"location":"reference/proto/rpc/#bluerpc","title":"BlueRPC","text":"<p>main service</p> Method Name Request Type Response Type Description Hello HelloRequest HelloResponse first request after connection, returns general infos about the worker BLEScan BLEScanRequest BLEScanResponse stream start a scanner and stream the results BLEScanStop Void StatusMessage stop the scanner BLEConnect BLEConnectRequest BLEConnectResponse connect BLEDisconnect BLEDevice StatusMessage disconnect BLEPair BLEPairingRequest StatusMessage pair BLEPairCode BLEPairingCodeRequest StatusMessage pairing code (should be called after BLEPair when ERROR_CODE_PAIRING_CODE_REQUIRED is returned) BLEUnpair BLEDevice StatusMessage unpair BLEGetDevices Void BLEDevicesResponse get a list of connected and paired devices BLEGetConnectionProperties BLEDevice BLEConnectionPropertiesResponse get connection properties BLEListServices BLEDevice BLEListServicesResponse list services, characteristics and descriptors for a device BLEReadCharacteristic BLEReadCharacteristicRequest BLEReadResponse read characteristic BLEReadDescriptor BLEReadDescriptorRequest BLEReadResponse read descriptor BLEWriteCharacteristic BLEWriteCharacteristicRequest StatusMessage write characteristic BLEWriteDescriptor BLEWriteDescriptorRequest StatusMessage write descriptor BLENotification BLENotificationRequest StatusMessage subscribe or unsubscribe to a characteristic notification BLEReceiveNotifications Void BLENotificationResponse stream global method to receive all the subscribed notifications BLEReceiveDisconnect Void BLEDevice stream global method to receive disconnect notifications <p></p> <p>Top</p>"},{"location":"reference/proto/rpc/#rpcgattproto","title":"rpc/gatt.proto","text":""},{"location":"reference/proto/rpc/#bleadvertisementdata","title":"BLEAdvertisementData","text":"<p>simple key/value message for storing advertisement data</p> Field Type Label Description uuid string key (usually service uuid for BLE) value bytes optional associated value <p></p>"},{"location":"reference/proto/rpc/#blecharacteristic","title":"BLECharacteristic","text":"<p>BLE Characteristic representation</p> Field Type Label Description uuid string characteristic UUID properties BLEChrProperty repeated characteristic properties descriptors BLEDescriptor repeated descriptors associated with this characteristic <p></p>"},{"location":"reference/proto/rpc/#bleconnectrequest","title":"BLEConnectRequest","text":"<p>connect request</p> Field Type Label Description device BLEDevice device <p></p>"},{"location":"reference/proto/rpc/#bleconnectresponse","title":"BLEConnectResponse","text":"<p>connect response</p> Field Type Label Description status StatusMessage status mtu uint32 mtu <p></p>"},{"location":"reference/proto/rpc/#bleconnectionpropertiesresponse","title":"BLEConnectionPropertiesResponse","text":"<p>connection properties</p> Field Type Label Description status StatusMessage status rssi float rssi <p></p>"},{"location":"reference/proto/rpc/#bledescriptor","title":"BLEDescriptor","text":"<p>BLE Descriptor representation</p> Field Type Label Description uuid string descriptor UUID <p></p>"},{"location":"reference/proto/rpc/#bledevice","title":"BLEDevice","text":"<p>represents the data needed to identify a bluetooth device</p> Field Type Label Description mac string using the mac address uuid string or using a UUID (macOS) <p></p>"},{"location":"reference/proto/rpc/#bledevicesresponse","title":"BLEDevicesResponse","text":"<p>message representing the state of the worker connections</p> Field Type Label Description status StatusMessage status max_connections uint32 maximum number of simultaneous connections allowed (0 if undefined) connected_devices BLEDevice repeated list of currently connected devices reliable_paired_list bool if the paired devices list is reliable (=query to the bluetooth system, != stored list of previous pairings) paired_devices BLEDevice repeated list of paired devices <p></p>"},{"location":"reference/proto/rpc/#blelistservicesresponse","title":"BLEListServicesResponse","text":"<p>list of Services/Characteristics/Descriptors for a specific device</p> Field Type Label Description status StatusMessage status device BLEDevice device services BLEService repeated services <p></p>"},{"location":"reference/proto/rpc/#blenotificationrequest","title":"BLENotificationRequest","text":"<p>subscribe/unsubscribe to a characteristic notification</p> Field Type Label Description device BLEDevice device service_uuid string service uuid uuid string characteristic uuid subscribe bool subscribe <p></p>"},{"location":"reference/proto/rpc/#blenotificationresponse","title":"BLENotificationResponse","text":"<p>characteristic notification data</p> Field Type Label Description device BLEDevice device service_uuid string service uuid uuid string characteristic uuid data bytes data <p></p>"},{"location":"reference/proto/rpc/#blepairingcoderequest","title":"BLEPairingCodeRequest","text":"<p>request for pairing with code</p> Field Type Label Description device BLEDevice device code string code <p></p>"},{"location":"reference/proto/rpc/#blepairingrequest","title":"BLEPairingRequest","text":"<p>pairing request</p> Field Type Label Description device BLEDevice device <p></p>"},{"location":"reference/proto/rpc/#blereadcharacteristicrequest","title":"BLEReadCharacteristicRequest","text":"<p>read characteristic</p> Field Type Label Description device BLEDevice device service_uuid string service uuid uuid string characteristic uuid <p></p>"},{"location":"reference/proto/rpc/#blereaddescriptorrequest","title":"BLEReadDescriptorRequest","text":"<p>read descriptor</p> Field Type Label Description device BLEDevice device service_uuid string service uuid characteristic_uuid string characteristic uuild uuid string descriptor uuid <p></p>"},{"location":"reference/proto/rpc/#blereadresponse","title":"BLEReadResponse","text":"<p>generic message for returning data</p> Field Type Label Description status StatusMessage status data bytes data <p></p>"},{"location":"reference/proto/rpc/#blescanfilter","title":"BLEScanFilter","text":"<p>device scan filter</p> Field Type Label Description type BLEScanFilterType type of filter value string filtering data <p></p>"},{"location":"reference/proto/rpc/#blescanrequest","title":"BLEScanRequest","text":"<p>device scan configuration</p> Field Type Label Description interval uint64 scanning interval in miliseconds active bool Passive or Active scanning filters BLEScanFilter repeated scanning filters (a device must match at least one of these filters, all devices are returned if no filters are specified) <p></p>"},{"location":"reference/proto/rpc/#blescanresponse","title":"BLEScanResponse","text":"<p>message representing a scan result for a device</p> Field Type Label Description status StatusMessage status device BLEDevice device information rssi float RSSI txpwr float TX Power service_uuids string repeated discovered services service_data BLEAdvertisementData repeated advertisement data manufacturer_data BLEAdvertisementData repeated advertisement data time uint64 timestamp of the discovery name string name of the device <p></p>"},{"location":"reference/proto/rpc/#bleservice","title":"BLEService","text":"<p>BLE Service representation</p> Field Type Label Description uuid string service UUID characteristics BLECharacteristic repeated characteristics associated with this service <p></p>"},{"location":"reference/proto/rpc/#blewritecharacteristicrequest","title":"BLEWriteCharacteristicRequest","text":"<p>write characteristic</p> Field Type Label Description device BLEDevice device service_uuid string service uuid uuid string characteristic uuid data bytes data mode BLEWriteMode mode <p></p>"},{"location":"reference/proto/rpc/#blewritedescriptorrequest","title":"BLEWriteDescriptorRequest","text":"<p>read descriptor</p> Field Type Label Description device BLEDevice device service_uuid string service uuid characteristic_uuid string characteristic uuild uuid string descriptor uuid data bytes data <p></p>"},{"location":"reference/proto/rpc/#blechrproperty","title":"BLEChrProperty","text":"<p>BLE characteristics properties</p> Name Number Description BLE_CHR_PROPERTY_UNK 0 unknown characteristic BLE_CHR_PROPERTY_READ 1 read property BLE_CHR_PROPERTY_WRITE 2 write property BLE_CHR_PROPERTY_NOTIFY 3 notify property BLE_CHR_PROPERTY_BROADCAST 4 broadcast property BLE_CHR_PROPERTY_EXTENDED_PROPS 5 extended properties BLE_CHR_PROPERTY_INDICATE 6 indicate property BLE_CHR_PROPERTY_SIGNED_WRITE 7 signed write property BLE_CHR_PROPERTY_WRITE_NO_RESPONSE 8 write without response property <p></p>"},{"location":"reference/proto/rpc/#blescanfiltertype","title":"BLEScanFilterType","text":"<p>scan filter types</p> Name Number Description BLE_SCAN_FILTER_TYPE_UNKNOWN 0 unknown BLE_SCAN_FILTER_TYPE_MAC 1 filter by mac address BLE_SCAN_FILTER_TYPE_NAME 2 filter by device name BLE_SCAN_FILTER_TYPE_UUID 3 filter by service UUID (only from the advertisement data) <p></p>"},{"location":"reference/proto/rpc/#blewritemode","title":"BLEWriteMode","text":"<p>BLE writing mode</p> Name Number Description BLE_WRITE_MODE_UNK 0 default write mode BLE_WRITE_MODE_NO_RESPONSE 1 write with no response BLE_WRITE_MODE_SIGNED 2 signed write"},{"location":"reference/proto/rpc/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"reference/worker/bluerpc.discovery/","title":"Bluerpc.discovery","text":""},{"location":"reference/worker/bluerpc.discovery/#module-bluerpcdiscovery","title":"module <code>bluerpc.discovery</code>","text":""},{"location":"reference/worker/bluerpc.discovery/#function-start_discovery","title":"function <code>start_discovery</code>","text":"<pre><code>start_discovery(\n    bind_addr: str = '[::]:50052',\n    name: str = 'unknown',\n    encrypted: bool = False\n) \u2192 None\n</code></pre> <p>Start the mDNS task for auto-discovery </p> <p>Args:</p> <ul> <li><code>bind_addr</code>:  the bind address passed to the worker </li> <li><code>name</code>:  the name of the worker </li> <li><code>encrypted</code>:  if the worker is running with encryption </li> </ul> <p>This file was automatically generated via lazydocs.</p>"},{"location":"reference/worker/bluerpc.utils/","title":"Bluerpc.utils","text":""},{"location":"reference/worker/bluerpc.utils/#module-bluerpcutils","title":"module <code>bluerpc.utils</code>","text":""},{"location":"reference/worker/bluerpc.utils/#function-validate_mac","title":"function <code>validate_mac</code>","text":"<pre><code>validate_mac(addr: str) \u2192 bool\n</code></pre> <p>Mac address validation regex </p> <p>Args:</p> <ul> <li><code>addr</code>:  the mac address (with colons) </li> </ul> <p>Returns:  True if this is a valid mac address </p> <p></p>"},{"location":"reference/worker/bluerpc.utils/#function-validate_uuid","title":"function <code>validate_uuid</code>","text":"<pre><code>validate_uuid(u: str) \u2192 bool\n</code></pre> <p>UUID validation regex </p> <p>Args:</p> <ul> <li><code>addr</code>:  the uuid </li> </ul> <p>Returns:  True if this is a valid UUID </p> <p></p>"},{"location":"reference/worker/bluerpc.utils/#function-get_appdata_dir","title":"function <code>get_appdata_dir</code>","text":"<pre><code>get_appdata_dir() \u2192 Path\n</code></pre> <p>Get the path to a bluerpc appdata folder </p> <p>Returns:   a path object to this folder </p> <p></p>"},{"location":"reference/worker/bluerpc.utils/#function-get_version","title":"function <code>get_version</code>","text":"<pre><code>get_version() \u2192 str\n</code></pre> <p>Helper to get the current version of our package </p> <p>Returns:   the version if found, else 0.0.0 </p> <p>This file was automatically generated via lazydocs.</p>"}]}